/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hogwartsprojektet;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author EmelieD
 */
public class Elev extends javax.swing.JFrame {
    
    private final InfDB idb;

    /**
     * Creates new form NewJFrame
     * @param idb
     */
    public Elev(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultat = new javax.swing.JTextArea();
        elevFornamn = new javax.swing.JTextField();
        elevEfternamn = new javax.swing.JTextField();
        elevElevhem = new javax.swing.JComboBox<>();
        elevBetyg = new javax.swing.JButton();
        elevVisaElevhem = new javax.swing.JButton();
        elevPrefekt = new javax.swing.JButton();
        elevKurser = new javax.swing.JButton();
        elevPokalen = new javax.swing.JButton();
        elevLarareKurs = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        elevTillbaka = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        resultat.setColumns(20);
        resultat.setRows(5);
        jScrollPane1.setViewportView(resultat);

        elevElevhem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gryffindor", "Hufflepuff", "Ravenclaw", "Slytherin" }));

        elevBetyg.setText("Visa betyg");
        elevBetyg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevBetygActionPerformed(evt);
            }
        });

        elevVisaElevhem.setText("Visa elever i");
        elevVisaElevhem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevVisaElevhemActionPerformed(evt);
            }
        });

        elevPrefekt.setText("Visa prefekt");
        elevPrefekt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevPrefektActionPerformed(evt);
            }
        });

        elevKurser.setText("Visa kurser");
        elevKurser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevKurserActionPerformed(evt);
            }
        });

        elevPokalen.setText("Pokalen");
        elevPokalen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevPokalenActionPerformed(evt);
            }
        });

        elevLarareKurs.setText("Lärare kurs");
        elevLarareKurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevLarareKursActionPerformed(evt);
            }
        });

        jLabel1.setText("Förnamn:");

        jLabel2.setText("Efternamn:");

        jLabel3.setText("Vilket elevhem:");

        elevTillbaka.setText("Tillbaka");
        elevTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elevTillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(elevKurser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elevBetyg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elevPokalen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elevPrefekt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elevLarareKurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(elevTillbaka)
                    .addComponent(elevVisaElevhem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(28, 28, 28)
                        .addComponent(elevElevhem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(27, 27, 27)
                                .addComponent(elevFornamn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(elevEfternamn)))))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(elevFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elevEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(elevElevhem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(elevBetyg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elevKurser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elevPokalen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elevVisaElevhem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elevPrefekt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elevLarareKurs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(elevTillbaka)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void elevVisaElevhemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevVisaElevhemActionPerformed
        try {
            String elevhemmet = (String) elevElevhem.getSelectedItem();
            String fragan = "SELECT ELEV.FORNAMN FROM SOVSAL JOIN ELEV ON ELEV.SOVSAL = SOVSAL.SOVSAL_ID JOIN ELEVHEM ON ELEVHEM.ELEVHEM_ID = SOVSAL.ELEVHEM WHERE ELEVHEM.ELEVHEMSNAMN = '" + elevhemmet + "'";
            ArrayList<String> fornamn = idb.fetchColumn(fragan);

            fragan = "SELECT ELEV.EFTERNAMN FROM SOVSAL JOIN ELEV ON ELEV.SOVSAL = SOVSAL.SOVSAL_ID JOIN ELEVHEM ON ELEVHEM.ELEVHEM_ID = SOVSAL.ELEVHEM WHERE ELEVHEM.ELEVHEMSNAMN = '" + elevhemmet + "'";
            ArrayList<String> efternamn = idb.fetchColumn(fragan);

            String svar = " ";
            for (int i = 0; i < fornamn.size(); i++) {
                svar += fornamn.get(i) + "." + efternamn.get(i) + "\n";

            }

            resultat.setText(svar);
        } 
        catch (InfException e) {
            JOptionPane.showMessageDialog(null, "något gick snett");
        }
    }//GEN-LAST:event_elevVisaElevhemActionPerformed

    private void elevKurserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevKurserActionPerformed
        if(Validering.omRutaTom(elevFornamn) && Validering.omRutaTom(elevEfternamn)){
        
        try {
            String namn1 = elevFornamn.getText();
            String namn2 = elevEfternamn.getText();
            String fragan = "SELECT KURSNAMN FROM KURS JOIN REGISTRERAD_PA ON KURS.KURS_ID = REGISTRERAD_PA.KURS_ID JOIN ELEV ON ELEV.ELEV_ID = REGISTRERAD_PA.ELEV_ID WHERE ELEV.FORNAMN = '" + namn1 + "' AND ELEV.EFTERNAMN ='" + namn2 + "'";
            ArrayList<String> kurser = idb.fetchColumn(fragan);
            
            String svar = " ";
            try {
            for(int i =0; i < kurser.size(); i++){
                svar += kurser.get(i) + "\n";
            }
            }
            
            catch(NullPointerException e) {
            System.out.println("Tom loop");
            JOptionPane.showMessageDialog(null, "Vänligen skriv in förnamn och efternamn på elev");
        }
            
            resultat.setText(svar);
        } 
        
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Något gick snett!");
        }
        }
    }//GEN-LAST:event_elevKurserActionPerformed

    private void elevTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevTillbakaActionPerformed
        new Startsida(idb).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_elevTillbakaActionPerformed

    private void elevPokalenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevPokalenActionPerformed
        try{
       
            String fragan = "SELECT ELEVHEMSNAMN FROM ELEVHEM";
            ArrayList<String> elevhemmen = idb.fetchColumn(fragan);
       
      
       fragan = "SELECT HUSPOANG FROM ELEVHEM";
       ArrayList<String> huspoangen = idb.fetchColumn(fragan);
       
       String svar = " ";
       for(int i= 0; i<elevhemmen.size(); i++){
           svar += elevhemmen.get(i) + "  har " + huspoangen.get(i) + " antal poäng " + "\n";
       }
        resultat.setText(svar);
      
               
      }
        catch(InfException e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
        }
    }//GEN-LAST:event_elevPokalenActionPerformed

    private void elevBetygActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevBetygActionPerformed
        if(Validering.omRutaTom(elevFornamn) && Validering.omRutaTom(elevEfternamn)){
        try {

            String namn1 = elevFornamn.getText();
            String namn2 = elevEfternamn.getText();
            String fragan = "SELECT KURS.KURSNAMN FROM ELEV JOIN HAR_BETYG_I ON HAR_BETYG_I.ELEV_ID = ELEV.ELEV_ID JOIN KURS ON KURS.KURS_ID = HAR_BETYG_I.KURS_ID WHERE ELEV.FORNAMN = '" + namn1 + "' AND ELEV.EFTERNAMN = '" + namn2 + "' ";
            ArrayList <String> kurs = idb.fetchColumn(fragan);
            fragan = "SELECT KURSBETYG FROM HAR_BETYG_I JOIN ELEV ON ELEV.ELEV_ID = HAR_BETYG_I.ELEV_ID WHERE ELEV.FORNAMN = '" + namn1 + "' AND ELEV.EFTERNAMN = '" + namn2 + "'";
            ArrayList<String> kursbetyg = idb.fetchColumn(fragan);

            String svar = " ";
            try{
            for (int i = 0; i < kursbetyg.size(); i++) {
                svar += kursbetyg.get(i) + " i kursen " + kurs.get(i) + "\n";
            }
            }
            catch(NullPointerException e){
                System.out.println("tom");
                JOptionPane.showMessageDialog(null, "Vänligen skriv in förnamn och efternamn på elev");
            }
            

            resultat.setText(svar);
        
            

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "något gick snett");

        }
        }
    }//GEN-LAST:event_elevBetygActionPerformed

    private void elevPrefektActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevPrefektActionPerformed
        try {
            String elevhemmet = (String) elevElevhem.getSelectedItem();
            String fragan = "SELECT ELEV.FORNAMN FROM ELEVHEM JOIN ELEV ON ELEV.ELEV_ID = ELEVHEM.PREFEKT WHERE ELEVHEM.ELEVHEMSNAMN = '" + elevhemmet + "';";
            ArrayList<String> fornamn = idb.fetchColumn(fragan);

            fragan = "SELECT ELEV.EFTERNAMN FROM ELEVHEM JOIN ELEV ON ELEV_ID = ELEVHEM.PREFEKT WHERE ELEVHEM.ELEVHEMSNAMN = '" + elevhemmet + "';";
            ArrayList<String> efternamn = idb.fetchColumn(fragan);

            String svaretStrang = "";
            for (int i = 0; i < fornamn.size(); i++) {
                svaretStrang += fornamn.get(i) + "." + efternamn.get(i) + " " + " \n";

            }
            resultat.setText(svaretStrang);
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "något gick fel");
        }
    }//GEN-LAST:event_elevPrefektActionPerformed

    private void elevLarareKursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elevLarareKursActionPerformed
     new LarareKurs(idb).setVisible(true);
     this.dispose();
    }//GEN-LAST:event_elevLarareKursActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton elevBetyg;
    private javax.swing.JTextField elevEfternamn;
    private javax.swing.JComboBox<String> elevElevhem;
    private javax.swing.JTextField elevFornamn;
    private javax.swing.JButton elevKurser;
    private javax.swing.JButton elevLarareKurs;
    private javax.swing.JButton elevPokalen;
    private javax.swing.JButton elevPrefekt;
    private javax.swing.JButton elevTillbaka;
    private javax.swing.JButton elevVisaElevhem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea resultat;
    // End of variables declaration//GEN-END:variables
}
